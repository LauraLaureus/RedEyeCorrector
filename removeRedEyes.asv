function [result] = removeRedEyes(fileName,printImages)

iImagesRequired = true;

if nargin == 2
    iImagesRequired = printImages;
end

I = imread(fileName);
FDetector = vision.CascadeObjectDetector;
disk = strel('disk',2);


detFaces = step(FDetector,I);

if size(detFaces,1) == 0
    detFaces = [0 0 size(I,2) size(I,1)];
end


for i = 1:size(detFaces,1)
    %se extrae la cara
    face = imcrop(I,detFaces(i,:));
    %se extrae la sección de la cara que tiene más probabilidad de tener
    %los ojos
    eyesRect = calculateFrecuentEyeRegion(face);
    eyesRegion = imcrop(face,eyesRect);
    
    if iImagesRequired
        figure,imshow(eyesRegion),title('RegionOjos');
    end
    
    %se crea un mapa de "rojez"
    redMap = redness(eyesRegion);
    
    %detect diferent types of red
    h = histogram(redMap);
    k = length(findpeaks(h.Values));
    
    if k > 1 
        clusters  = kmeans(reshape(redMap,[],1),k+1); %añade el negro como cluster
        clusterRedMap = reshape(clusters,size(redMap));
        h = histogram(clusterRedMap);
        clusterFrequencies = h.Values;
        m = max(clusterFrequencies);
        clusterFRecuencies()
        
        
    end
    
    
    %se crea una máscara donde a 0 están todos los píxeles que pueden ser
    %piel
    eyesRegionG = imgaussfilt(eyesRegion,1);
    mask = removeSkinModal(eyesRegionG);
    
    %se crea una máscara donde a 0 están todos los píxeles que se
    %encuentran debajo del valor del quantil 60%
    redMask = threshold(redMap,quantile(reshape(redMap,1,[]),0.5));
    
    if iImagesRequired
        figure, imshow(redMask),title('Máscara roja');
    end
    
    %se genera la máscara intersección de ambos
    intersectionMask = mask .* redMask;
    
    if iImagesRequired
        figure, imshow(intersectionMask),title('Máscara intersección');
    end
    
    [lbls,l] = bwlabel(intersectionMask);
    if l > 2
        [shapes] = shapeFiltering(lbls);
    else 
        shapes = intersectionMask;
    end

    mask2 = uint8( im2bw(shapes,0.5));
    shapeFiltered = applyMask(double(eyesRegion),double(mask2));
    
    if iImagesRequired
        figure,imshow(uint8(shapeFiltered)),title('Máscara filtrada por forma');
    end
    
    img = refillColor(intersectionMask,eyesRegion);
    
    if iImagesRequired
        figure,imshow(uint8(img)),title('Image');
    end
    
    face = copyOverImg(face,img,eyesRect);
    
    if iImagesRequired
        figure,imshow(uint8(face)),title('Cara');
    end

    if detFaces(1) > 0
        I = copyOverImg(I,face,detFaces(i,:));
    else
        I = face;
    end
    
    if iImagesRequired
        figure,imshow(uint8(I)),title('I');
    end
end
result = I;

end